# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           				controllers.main.tpl.Main.home()

#ngs-rg api
GET		/api/ngsrs/instruments						controllers.ngsrg.lims.LimsInformations.instruments()
GET		/api/ngsrs/experiments						controllers.ngsrg.lims.LimsInformations.experiments()
GET		/api/ngsrs/container/:barCode				controllers.ngsrg.lims.LimsInformations.containerSupport(barCode: java.lang.String)

#run tpl
GET	   	/runs/:homecode/home						controllers.runs.tpl.Runs.home(homecode: java.lang.String)
GET	   	/runs/:code									controllers.runs.tpl.Runs.get(code: java.lang.String)
GET	   	/runs/:code/validation						controllers.runs.tpl.Runs.validation(code: java.lang.String)
GET		/tpl/runs/search/:type						controllers.runs.tpl.Runs.search(type: java.lang.String)
GET		/tpl/runs/details/default					controllers.runs.tpl.Runs.detailsDefault()
GET		/tpl/runs/details/validation				controllers.runs.tpl.Runs.detailsValidation()
GET		/tpl/runs/js-routes							controllers.runs.tpl.Runs.javascriptRoutes()
#run api
GET    	/api/runs               					controllers.runs.api.Runs.list()
GET    	/api/runs/:code               				controllers.runs.api.Runs.get(code: java.lang.String)
HEAD	/api/runs/:code               				controllers.runs.api.Runs.head(code: java.lang.String)
POST   	/api/runs									controllers.runs.api.Runs.save()
PUT   	/api/runs/:code 							controllers.runs.api.Runs.update(code: java.lang.String)
DELETE	/api/runs/:code								controllers.runs.api.Runs.delete(code:java.lang.String)
PUT		/api/runs/:code/state/:stateCode			controllers.runs.api.Runs.state(code:java.lang.String, stateCode:java.lang.String)
PUT		/api/runs/:code/workflow/:stateCode			controllers.runs.api.Runs.state(code:java.lang.String, stateCode:java.lang.String)
PUT		/api/runs/:code/validation/:valid 			controllers.runs.api.Runs.validation(code:java.lang.String, valid:java.lang.String)
PUT		/api/runs/:code/check-rules/:codeRules		controllers.runs.api.Runs.checkRules(code:java.lang.String, codeRules:java.lang.String)

#deprecated
POST 	/api/runs/:code/dispatch					controllers.runs.api.Runs.dispatch(code: java.lang.String)

GET    	/api/runs/:code/treatments					controllers.runs.api.RunTreatments.list(code: java.lang.String)
GET    	/api/runs/:code/treatments/:trCode			controllers.runs.api.RunTreatments.get(code: java.lang.String, trCode: java.lang.String)
HEAD   	/api/runs/:code/treatments/:trCode			controllers.runs.api.RunTreatments.head(code: java.lang.String, trCode: java.lang.String)
POST   	/api/runs/:code/treatments					controllers.runs.api.RunTreatments.save(code: java.lang.String)
PUT   	/api/runs/:code/treatments/:trCode			controllers.runs.api.RunTreatments.update(code: java.lang.String, trCode: java.lang.String)
DELETE 	/api/runs/:code/treatments/:trCode			controllers.runs.api.RunTreatments.delete(code: java.lang.String, trCode: java.lang.String)


#run lane
GET	   	/api/runs/:code/lanes								controllers.runs.api.Lanes.list(code: java.lang.String)
GET	   	/api/runs/:code/lanes/:number						controllers.runs.api.Lanes.get(code: java.lang.String, number:java.lang.Integer)
HEAD   	/api/runs/:code/lanes/:number						controllers.runs.api.Lanes.head(code: java.lang.String, number:java.lang.Integer)
POST  	/api/runs/:code/lanes								controllers.runs.api.Lanes.save(code: java.lang.String)
PUT  	/api/runs/:code/lanes/:number						controllers.runs.api.Lanes.update(code: java.lang.String, number:java.lang.Integer)
DELETE 	/api/runs/:code/lanes/:number						controllers.runs.api.Lanes.delete(code: java.lang.String, number:java.lang.Integer)
DELETE	/api/runs/:code/lanes								controllers.runs.api.Lanes.deleteByRunCode(code: java.lang.String)
PUT		/api/runs/:code/lanes/:number/state/:stateCode		controllers.runs.api.Lanes.state(code:java.lang.String, number:java.lang.Integer, stateCode:java.lang.String)
PUT		/api/runs/:code/lanes/:number/workflow/:stateCode	controllers.runs.api.Lanes.state(code:java.lang.String, number:java.lang.Integer, stateCode:java.lang.String)
PUT		/api/runs/:code/lanes/:number/validation/:valid		controllers.runs.api.Lanes.validation(code:java.lang.String, number:java.lang.Integer, valid:java.lang.String)

GET		/api/runs/:code/lanes/:laneNumber/treatments				controllers.runs.api.LaneTreatments.list(code: java.lang.String, laneNumber:java.lang.Integer)
GET		/api/runs/:code/lanes/:laneNumber/treatments/:trCode		controllers.runs.api.LaneTreatments.get(code: java.lang.String, laneNumber:java.lang.Integer, trCode: java.lang.String)
HEAD	/api/runs/:code/lanes/:laneNumber/treatments/:trCode		controllers.runs.api.LaneTreatments.head(code: java.lang.String, laneNumber:java.lang.Integer, trCode: java.lang.String)
POST	/api/runs/:code/lanes/:laneNumber/treatments				controllers.runs.api.LaneTreatments.save(code: java.lang.String, laneNumber:java.lang.Integer)
PUT		/api/runs/:code/lanes/:laneNumber/treatments/:trCode		controllers.runs.api.LaneTreatments.update(code: java.lang.String, laneNumber:java.lang.Integer, trCode: java.lang.String)
DELETE	/api/runs/:code/lanes/:laneNumber/treatments/:trCode		controllers.runs.api.LaneTreatments.delete(code: java.lang.String, laneNumber:java.lang.Integer, trCode: java.lang.String)

#deprecated
#GET	   	/api/runs/:code/:laneNumber					controllers.runs.api.Lanes.getOld(code: java.lang.String, laneNumber:java.lang.Integer)
#POST  		/api/runs/:code								controllers.runs.api.Lanes.saveOld(code: java.lang.String)

#run readset
GET	   	/readsets/:homecode/home					controllers.readsets.tpl.ReadSets.home(homecode: java.lang.String)
GET	   	/readsets/:code								controllers.readsets.tpl.ReadSets.get(code: java.lang.String)
GET		/tpl/readsets/search/:type					controllers.readsets.tpl.ReadSets.search(type: java.lang.String)


GET    	/api/readsets	                 			controllers.readsets.api.ReadSets.list()
GET	   	/api/readsets/:code							controllers.readsets.api.ReadSets.get(code)
HEAD   	/api/readsets/:code							controllers.readsets.api.ReadSets.head(code)
POST 	/api/readsets								controllers.readsets.api.ReadSets.save()
PUT    	/api/readsets/:code							controllers.readsets.api.ReadSets.update(code)
DELETE	/api/readsets/:code							controllers.readsets.api.ReadSets.delete(code: java.lang.String)
DELETE	/api/runs/:code/readsets					controllers.readsets.api.ReadSets.deleteByRunCode(code: java.lang.String)
PUT		/api/readsets/:code/workflow/:stateCode		controllers.readsets.api.ReadSets.workflow(code:java.lang.String, stateCode:java.lang.String)

GET		/api/readsets/:code/treatments				controllers.readsets.api.ReadSetTreatments.list(code: java.lang.String)
GET		/api/readsets/:code/treatments/:trCode		controllers.readsets.api.ReadSetTreatments.get(code: java.lang.String, trCode: java.lang.String)
HEAD	/api/readsets/:code/treatments/:trCode		controllers.readsets.api.ReadSetTreatments.head(code: java.lang.String, trCode: java.lang.String)
POST	/api/readsets/:code/treatments				controllers.readsets.api.ReadSetTreatments.save(code: java.lang.String)
PUT		/api/readsets/:code/treatments/:trCode		controllers.readsets.api.ReadSetTreatments.update(code: java.lang.String, trCode: java.lang.String)
DELETE	/api/readsets/:code/treatments/:trCode		controllers.readsets.api.ReadSetTreatments.delete(code: java.lang.String, trCode: java.lang.String)

#deprecated
#POST   	/api/runs/:code/:laneNumber				controllers.readsets.api.ReadSets.saveOld(code: java.lang.String, laneNumber:java.lang.Integer)

#run file
GET     /api/readsets/:code/files									controllers.readsets.api.Files.list(code: java.lang.String)
GET     /api/readsets/:code/files/:fullname							controllers.readsets.api.Files.get(code: java.lang.String, fullname: java.lang.String)
HEAD    /api/readsets/:code/files/:fullname							controllers.readsets.api.Files.head(code: java.lang.String, fullname: java.lang.String)
POST  	/api/readsets/:code/files									controllers.readsets.api.Files.save(code: java.lang.String)
PUT     /api/readsets/:code/files/:fullname							controllers.readsets.api.Files.update(code: java.lang.String, fullname: java.lang.String)
DELETE  /api/readsets/:code/files/:fullname							controllers.readsets.api.Files.delete(code: java.lang.String, fullname: java.lang.String)
DELETE	/api/runs/:code/files										controllers.readsets.api.Files.deleteByRunCode(code: java.lang.String)
PUT		/api/readsets/:code/files/:fullname/workflow/:stateCode		controllers.readsets.api.Files.workflow(code: java.lang.String, fullname: java.lang.String, stateCode:java.lang.String)

#archive tpl
GET	   	/archives/:homecode/home					controllers.archives.tpl.ReadSets.home(homecode: java.lang.String)
GET	   	/archives/:code								controllers.archives.tpl.ReadSets.get(code: java.lang.String)
GET		/tpl/archives/search						controllers.archives.tpl.ReadSets.search()
GET		/tpl/archives/js-routes						controllers.archives.tpl.ReadSets.javascriptRoutes()
#archive api
PUT	   	/api/archives/readsets/:readSetCode			controllers.archives.api.ReadSets.save(readSetCode: java.lang.String)
GET	   	/api/archives/readsets						controllers.archives.api.ReadSets.list() 


#migration
GET		/migration									controllers.migration.Migration.migration()


#list
GET		/api/lists/resolutions				controllers.lists.api.Lists.resolutions()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               				controllers.Assets.at(path="/public", file)
GET     /messages.js                				controllers.main.tpl.Main.jsMessages()
GET     /codes.js        	        				controllers.main.tpl.Main.jsCodes()


