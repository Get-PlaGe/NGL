#created on: Jul 7, 2014
package birds

rule "get input submissionZip resources from NGL and internal referential for create XML"
@BirdsRule ( selectionRule )
dialect 'java'
 salience 200
 //no-loop
	when
		$input : InputSpecificationElement(name=="inputXMLSubZip", treatmentSpecification.name=="createXML", project.name == "SRA")
		$resourcesReferential : InternalReferential(name=="internalRefSubmission")
		$referentialDevice : InternalReferentialDevice ()
		$rps : ResourcePropertiesSet(initialized==false, inputSpecificationElement==$input, resourcesReferential==$resourcesReferential)
		$groupJob : Job( treatmentSpecification.specificationGroup == true)
	then
        Logger log = Logger.getLogger("ngl.sub.rules");
        log.debug("group internal referential device resources query from referential " + $resourcesReferential.getName());
        $rps.initialize();
        log.debug("Get data first from NGLSUB");
        Set<ResourceProperties> resourceProperties = new HashSet<ResourceProperties>();
        
        JobResource groupJobResource = $groupJob.getUniqueJobResource("subData");
        
        JSONDevice jsonDevice = new JSONDevice();
		Set<ResourceProperties> rpsRawData = jsonDevice.httpGetJSON(ProjectProperties.getProperty("server")+"/api/sra/experiments/rawDatas?submissionCode="+groupJobResource.getProperty("code"),"bot");
		boolean gzipForSubmission = SRAFilesUtil.checkGzipForSubmission(rpsRawData);
		if(!gzipForSubmission){
			ResourceProperties newRp = new ResourceProperties();
			newRp.setProperty("code",groupJobResource.getProperty("code"));
			newRp.setProperty("gzipForSubmission","false");
			newRp.setProperty("submissionTmpDirectory",groupJobResource.getProperty("submissionTmpDirectory"));
			newRp.setProperty("idGroupJob",""+$groupJob.getId());
			resourceProperties.add(newRp);
		}else{
        	resourceProperties = $referentialDevice.getGroupResourcesWithType($rps.getResourceType().getName(), $resourcesReferential, $groupJob);
		}
		$rps.setResourcePropertiesSet(resourceProperties);
		modify($rps) {};
end

rule "Syntax order command line for createXML specification"
	@BirdsRule(unixSyntaxRule)
	dialect 'java'
	salience 200
    when
        $strategy : UnixCommandSyntaxStrategy ( name == "createXMLSyntax" , commandLine == null)
    then
        Logger log = Logger.getLogger("ngl.sub.rules");
		$strategy.setCommandLine($strategy.getExecutableName());
		log.debug("command line : " + $strategy.getCommandLine());

end

rule "Define variable lineParmeter for createXML specification"
	@BirdsRule(ExecutionService)
	dialect 'java'
	salience 300
	no-loop
    when
       $executionService : ExecutionService( status == ExecutionService.PRE_JOB_EXECUTION_STATUS)
       $job : Job( treatmentSpecification!=null, treatmentSpecification.name == "createXML", treatmentSpecification.project.name == "SRA" )
    then
       Logger log = Logger.getLogger("ngl.sub.rules");
       log.debug("Set code in url for spec createXML");
       $job.setUnixCommand($job.getUnixCommand().replace("%code%", $job.getUniqueJobResource("subToXML").getProperty("code")));
       log.debug("Unix command "+$job.getUnixCommand());
       log.debug("Code "+$job.getUniqueJobResource("subToXML").getProperty("code"));
end

rule "add submissionXML resources in internalRefSubmission_xml to fire sendXML"
	@BirdsRule( addResources ) 
	dialect 'java'
	salience 200
	when
		$flag : Flag ( done == false ) 
		$output : OutputSpecificationElement(treatmentSpecification.name == "createXML")
	  	$referential : ResourcesReferential ( name == "internalRefSubmissionXML" )
		$resourceSet : ResourceSet( ioSpecificationElement == $output )
		$job : Job(treatmentSpecification!=null, treatmentSpecification.name == "createXML")
	then
		Logger log = Logger.getLogger("ngl.sub.rules");
		log.debug("Add resources rules for sendXML from file "+$job.getProperty(Job.STDOUT));
		Set<ResourceProperties> setResources = new JSONDevice().parseJSONFromFileName($job.getProperty(Job.STDOUT));
		for(ResourceProperties rp : setResources){
			JobResource outputResource = $resourceSet.createJobResource($output.getResourceType(),$referential.getName());
	   		outputResource.setResourceProperties(rp);
		}
		$flag.setDone(true);
		modify($flag){};
		modify($resourceSet){};
end
