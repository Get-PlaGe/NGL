package rules



declare InputSupport
	code : String
	categoryCode : String
end


rule "init inputsupport bionano"
	@nglSQ( validations )
	dialect "java"
	salience 1000
	no-loop
    when
	Experiment($typeCode:typeCode,$typeCode=="bionano-depot",$atomics:atomicTransfertMethods,$atomics!=null)
	AtomicTransfertMethod($inputContainerUseds:inputContainerUseds) from $atomics
    InputContainerUsed($support:locationOnContainerSupport.code,$categoryCode:locationOnContainerSupport.categoryCode) from $inputContainerUseds
	not InputSupport($support==code)
    then
		//Logger.debug("Support"+$support +" de category "+$categoryCode);
		InputSupport inputSupport=new InputSupport($support,$categoryCode);
		insert(inputSupport);
	end

rule "only one inputssupport bionano"
	@nglSQ (validations )
	dialect "java"
	salience 400
	no-loop
    when
    Experiment($typeCode:typeCode,$typeCode=="bionano-depot")
    Set(empty==false,size!=1) from collect(InputSupport())
    $contextValidation:ContextValidation($errors : errors)
    then 
    	$contextValidation.addErrors("inputContainerSupportCodes","error.validationexp.oneInputSupport", $typeCode);
    end
 


rule "Validation bionano-depot"
	@nglSQ( validations )
	dialect "java"
	salience 1000
	no-loop
    when
    $experiment:Experiment($typeCode:typeCode,$typeCode=="bionano-depot")
    eval(true)
    then
		Logger.debug("Rules annotation @nglSQ(validations) bionano-depot");    
end
