package rules


rule "prepa-fc-ordered"
	@nglSQ( calculations )
	dialect "java"
	salience 1000
	no-loop
	lock-on-active true
    when
    	 $experiment:Experiment($typeCode:typeCode,$typeCode=="prepa-fc-ordered", $stateCode : state.code, $stateCode!="F")
    	 $atomicTransfert: ManyToOneContainer( )
    	 InputContainerUsed( $experimentProperties : experimentProperties,$experimentProperties!=null, $concentrationIN:concentration) from $atomicTransfert.inputContainerUseds
    	 
    then
    	Logger.debug("Experiment prepa-fc-ordered");
    end

rule "prepa-fc-ordered volume stock engaged in denaturation"
	@nglSQ( calculations )
	dialect "java"
	salience 1000
	no-loop
	lock-on-active true
    when
    	 $experiment:Experiment($typeCode:typeCode,$typeCode=="prepa-fc-ordered", $stateCode : state.code, $stateCode!="F")
    	 $atomicTransfert: ManyToOneContainer( )
    	 InputContainerUsed( $experimentProperties : experimentProperties,$experimentProperties!=null, $concentrationIN:concentration) from $atomicTransfert.inputContainerUseds
    	 $finalConcentration1 : PropertyValue() from $experimentProperties.get("finalConcentration1")
    	 $finalVolume1 : PropertyValue() from $experimentProperties.get("finalVolume1")
    	 eval($finalVolume1.value != null && Double.class.isInstance($finalVolume1.value) && $finalConcentration1.value != null && Double.class.isInstance($finalConcentration1.value) && Double.parseDouble($concentrationIN.value.toString()) != 0)
   	then
   		Logger.debug("Calculation prepa-fc-ordered inputVolume: "+ $experiment.code+ " "+ $atomicTransfert.line+" "+ $finalConcentration1.value+"  "+$concentrationIN.value);
   		PropertySingleValue value = new PropertySingleValue(Math.round((Double)$finalConcentration1.value*(Double)$finalVolume1.value/Double.parseDouble($concentrationIN.value.toString())*100.0)/100.0,"\u00B5L");
   		if($experimentProperties.get("inputVolume") != null){
   			$experimentProperties.remove("inputVolume");
   		}

   		$experimentProperties.put("inputVolume",value);   		
   		update($experiment);
   	end



rule "prepa-fc-ordered volume PhiX"
	@nglSQ( calculations )
	dialect "java"
	salience 700
	no-loop
	lock-on-active true
	when
		 $experiment:Experiment($typeCode:typeCode,$typeCode=="prepa-fc-ordered", $stateCode : state.code, $stateCode!="F")
		 $atomicTransfert: ManyToOneContainer( )
		 InputContainerUsed( $experimentProperties : experimentProperties,$experimentProperties!=null) from $atomicTransfert.inputContainerUseds
		 OutputContainerUsed( $experimentPropertiesOut : experimentProperties,$experimentPropertiesOut!=null) from $atomicTransfert.outputContainerUseds
		 $phixPercent : PropertyValue() from $experimentPropertiesOut.get("phixPercent")
		 $finalConcentration1 : PropertyValue() from $experimentProperties.get("finalConcentration1")
		 $finalVolume1 : PropertyValue() from $experimentProperties.get("finalVolume1")
		 $phixConcentration : PropertyValue() from $experimentProperties.get("phixConcentration")
		 eval($phixConcentration.value != null &&  Double.class.isInstance($phixConcentration.value) && $phixPercent.value != null &&  Double.class.isInstance($phixPercent.value) && $finalConcentration1.value != null && Double.class.isInstance($finalConcentration1.value) && $finalVolume1.value != null && Double.class.isInstance($finalVolume1.value))
	then
		Logger.debug("Calculation prepa-fc-ordered  phixVolume: "+ $experiment.code+ " "+ $atomicTransfert.line);
		PropertySingleValue value = new PropertySingleValue(Math.round(((Double)$phixPercent.value*(Double)$finalConcentration1.value*(Double)$finalVolume1.value/(Double)$phixConcentration.value))/100.0,"\u00B5L");
		if($experimentProperties.get("phixVolume") != null){
			$experimentProperties.remove("phixVolume");
		}
		
		$experimentProperties.put("phixVolume",value);
		
		update($experiment);
	end     
	
rule "prepa-fc-ordered volume RSB"
	@nglSQ( calculations )
	dialect "java"
	salience 900
	no-loop
    when
    	 $experiment:Experiment($typeCode:typeCode,$typeCode=="prepa-fc-ordered", $stateCode : state.code, $stateCode!="F")
    	 $atomicTransfert: ManyToOneContainer( )
    	 InputContainerUsed( $experimentProperties : experimentProperties,$experimentProperties!=null, $concentrationIN:concentration) from $atomicTransfert.inputContainerUseds
    	 $phixVolume : PropertyValue() from $experimentProperties.get("phixVolume")
    	 $finalVolume1 : PropertyValue() from $experimentProperties.get("finalVolume1")
    	 $inputVolume : PropertyValue() from $experimentProperties.get("inputVolume")
    	 eval($inputVolume.value != null && Double.class.isInstance($inputVolume.value) && $finalVolume1.value != null && Double.class.isInstance($finalVolume1.value) && $phixVolume.value != null && Double.class.isInstance($phixVolume.value))
   	then
   		Logger.debug("Calculation prepa-fc-ordered rsbVolume: "+ $experiment.code+ " "+ $atomicTransfert.line);
   		PropertySingleValue value = new PropertySingleValue(Math.round(((Double)$finalVolume1.value-(Double)$inputVolume.value-(Double)$phixVolume.value)*100.0)/100.0,"\u00B5L");
   		if($experimentProperties.get("rsbVolume") != null){
   			$experimentProperties.remove("rsbVolume");
   		}
   		
   		$experimentProperties.put("rsbVolume", value);
   	end 

rule "prepa-fc-ordered concentration final"
	@nglSQ( calculations )
	dialect "java"
	salience 800
	lock-on-active true
	no-loop
    when
    	 $experiment:Experiment($typeCode:typeCode,$typeCode=="prepa-fc-ordered", $stateCode : state.code, $stateCode!="F")
    	 $atomicTransfert: ManyToOneContainer( )
    	 InputContainerUsed( $experimentProperties : experimentProperties,$experimentProperties!=null) from $atomicTransfert.inputContainerUseds
    	 OutputContainerUsed( $experimentPropertiesOut : experimentProperties,$experimentPropertiesOut!=null) from $atomicTransfert.outputContainerUseds
    	 $finalVolume : PropertyValue() from $experimentPropertiesOut.get("finalVolume")
    	 $inputVolume2 : PropertyValue() from $experimentProperties.get("inputVolume2")
    	 $finalConcentration1 : PropertyValue() from $experimentProperties.get("finalConcentration1")
    	 eval($finalConcentration1.value != null && Double.class.isInstance($finalConcentration1.value) && $inputVolume2.value != null && Double.class.isInstance($inputVolume2.value) && $finalConcentration1.value != null && Double.class.isInstance($finalVolume.value) && (Double)$finalVolume.value !=0)
   	then
   		Logger.debug("Calculation prepa-fc-ordered finalConcentration2 : "+ $experiment.code+ " "+ $atomicTransfert.line);
   		PropertySingleValue value = new PropertySingleValue(Math.round(((Double)$finalConcentration1.value*(Double)$inputVolume2.value/(Double)$finalVolume.value)*100.0)/100.0,"nM");
   		if($experimentProperties.get("finalConcentration2") != null){
   			$experimentProperties.remove("finalConcentration2");
   		}
   		
   		$experimentProperties.put("finalConcentration2",value);
   		update($experiment);
   	end