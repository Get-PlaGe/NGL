package rules

/*
rule "DEBUG prep-pcr-free"
    @nglSQ( validations )
	dialect "java"
	salience 100
	no-loop
    when
    	$experiment:Experiment($typeCode:typeCode,$typeCode=="prep-pcr-free")
    	$contextValidation:ContextValidation()
    	eval (true )
    then
		$contextValidation.addErrors("prep-pcr-free","DEBUG error");
end
*/

// 14/03/2016 verification du volume de sortie des containers prep-pcr-free
// NOTE: il faut passer par drools pour les verification sur les attributs
rule "Volume not null in prep-pcr-free outputContainer"
    @nglSQ( validations )
	dialect "java"
	salience 100
	no-loop
    when
    	$experiment:Experiment($typeCode:typeCode,$typeCode=="prep-pcr-free")
    	State($stateCode:code=="IP")
		$atomicTransfert: OneToOneContainer($inputContainerUsed:inputContainerUseds.get(0), $outputContainerUsed: outputContainerUseds.get(0))
	   	OutputContainerUsed($volume: volume) from $outputContainerUsed
    	$contextValidation:ContextValidation()
    	eval($volume == null || $volume.value == null || $volume.value == "")
    then
    	Logger.debug("Volume not null in prep-pcr-free outputContainer");   
    	// voir fichier messages pour le libellé de l'erreur
   		$contextValidation.addErrors("prep-pcr-free","error.validationexp.outputvolumenotnull", $outputContainerUsed.code);
end

/////////////////////// DEJA DANS common.drl !!!!!!!!!!!!!!!!!!!
/*
declare InputSupport
	code : String
	categoryCode : String
end

rule "init inputsupport prep-pcr-free"
	@nglSQ( validations )
	dialect "java"
	salience 500
	no-loop
    when
		Experiment($typeCode:typeCode, $typeCode=="prep-pcr-free", $atomics:atomicTransfertMethods, $atomics!=null)
		AtomicTransfertMethod($inputContainerUseds:inputContainerUseds) from $atomics
    	InputContainerUsed($support:locationOnContainerSupport.code, $categoryCode:locationOnContainerSupport.categoryCode) from $inputContainerUseds
		not InputSupport($support==code)
    then
		Logger.debug("Support "+$support +" de category "+$categoryCode);
		InputSupport inputSupport=new InputSupport($support,$categoryCode);
		insert(inputSupport);
end

rule "only one inputsupport prep-pcr-free"
	@nglSQ (validations )
	dialect "java"
	salience 400
	no-loop
    when
   		 Experiment($typeCode:typeCode, $typeCode=="prep-pcr-free")
   		 // necessaire ??? State($stateCode:code=="N")
   		 Set(empty==false,size>1) from collect(InputSupport())
   		 $contextValidation:ContextValidation($errors : errors)
    then 
    	Logger.debug("only one input Support in prep-pcr-free"); 
    	// voir fichier messages pour le libellé de l'erreur
    	$contextValidation.addErrors("inputContainerSupportCodes","error.validationexp.oneInputSupport", $typeCode);
end
*/