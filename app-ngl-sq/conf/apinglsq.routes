#samples
GET		/api/samples													controllers.samples.api.Samples.list()
GET		/api/samples/:code												controllers.samples.api.Samples.get(code: java.lang.String)


#supports api	
GET		/api/supports													controllers.containers.api.ContainerSupports.list()
GET		/api/supports/:code												controllers.containers.api.ContainerSupports.get(code:java.lang.String)
HEAD	/api/supports/:code												controllers.containers.api.ContainerSupports.head(code:java.lang.String)
PUT		/api/supports/:code/state										controllers.containers.api.ContainerSupports.updateState(code:java.lang.String)


PUT		/api-old/supports/batch												controllers.containers.api.ContainerSupports.updateBatch()
PUT		/api-old/supports/:code/state										controllers.containers.api.ContainerSupports.updateStateCode(code:java.lang.String)


#containers api
GET		/api/containers													controllers.containers.api.Containers.list()
#TODO a revoir plutot /api/containers/supports/categories
GET		/api/containers/container-support-categories  					controllers.containers.api.ContainerSupportCategories.list()
GET		/api/containers/:code											controllers.containers.api.Containers.get(code:java.lang.String)

PUT		/api/containers/:code/state										controllers.containers.api.Containers.updateState(code:java.lang.String)


PUT		/api-old/containers/batch											controllers.containers.api.Containers.updateBatch()
PUT		/api-old/containers/state-batch										controllers.containers.api.Containers.updateStateBatch()
PUT		/api-old/containers/:code											controllers.containers.api.Containers.update(code:java.lang.String)
PUT		/api-old/containers/:code/state										controllers.containers.api.Containers.updateStateCode(code:java.lang.String)

GET		/api/container-categories										controllers.containers.api.ContainerCategories.list()

#processes api
POST	/api/processes													controllers.processes.api.Processes.save()
POST	/api/processes/batch											controllers.processes.api.Processes.saveBatch()
PUT		/api/processes/:code											controllers.processes.api.Processes.update(code:java.lang.String)
PUT		/api/processes/:code/state										controllers.processes.api.Processes.updateState(code:java.lang.String)
DELETE	/api/processes/:code											controllers.processes.api.Processes.delete(code:java.lang.String)
HEAD	/api/processes/:code               								controllers.processes.api.Processes.head(code: java.lang.String)
GET		/api/processes													controllers.processes.api.Processes.list()
GET		/api/processes/:code											controllers.processes.api.Processes.get(code:java.lang.String)

PUT		/api-old/processes/:code/state										controllers.processes.api.Processes.updateStateCode(code:java.lang.String)


GET		/api/process-categories											controllers.processes.api.ProcessCategories.list()
GET		/api/process-types												controllers.processes.api.ProcessTypes.list()
GET		/api/process-types/:code										controllers.processes.api.ProcessTypes.get(code: java.lang.String)


#experiments api
GET		/api/experiments												@controllers.experiments.api.Experiments.list()
GET		/api/experiments/:code											@controllers.experiments.api.Experiments.get(code:java.lang.String)
POST	/api/experiments												@controllers.experiments.api.Experiments.save()
PUT		/api/experiments/:code											@controllers.experiments.api.Experiments.update(code:java.lang.String)
PUT		/api/experiments/:code/state									@controllers.experiments.api.Experiments.updateState(code:java.lang.String)

POST	/api/experiments/:code/comments									@controllers.experiments.api.ExperimentComments.save(code:java.lang.String)
PUT		/api/experiments/:code/comments/:commentCode					@controllers.experiments.api.ExperimentComments.update(code:java.lang.String, commentCode:java.lang.String)
DELETE	/api/experiments/:code/comments/:commentCode					@controllers.experiments.api.ExperimentComments.delete(code:java.lang.String, commentCode:java.lang.String)


POST	/api/experiments/sample-sheets 									instruments.io.Outputs.sampleSheets()
#PUT		/api/experiments/:code/experiment-information					controllers.experiments.api.ExperimentsOld.updateExperimentInformations(code:java.lang.String)
#PUT		/api/experiments/:code/experiment-properties					controllers.experiments.api.ExperimentsOld.updateExperimentProperties(code:java.lang.String)
#PUT		/api/experiments/:code/instrument-information					controllers.experiments.api.ExperimentsOld.updateInstrumentInformations(code:java.lang.String)
#PUT		/api/experiments/:code/instrument-properties					controllers.experiments.api.ExperimentsOld.updateInstrumentProperties(code:java.lang.String)
#PUT		/api/experiments/:code/data										controllers.experiments.api.ExperimentsOld.updateData(code:java.lang.String)

PUT		/api/experiments/:code/retry									controllers.experiments.api.ExperimentsOld.retry(code:java.lang.String)
PUT		/api/experiments/:code/stop-process								controllers.experiments.api.ExperimentsOld.stopProcess(code:java.lang.String)
PUT		/api/experiments/:code/end-of-process							controllers.experiments.api.ExperimentsOld.endOfProcess(code:java.lang.String)
#POST	/api/experiments/:code/comment									controllers.experiments.api.ExperimentsOld.addComment(code:java.lang.String)
#PUT		/api/experiments/:code/comment									controllers.experiments.api.ExperimentsOld.updateComment(code:java.lang.String)
#DELETE	/api/experiments/:code/comment/:commentCode						controllers.experiments.api.ExperimentsOld.deleteComment(code:java.lang.String, commentCode:java.lang.String)
PUT		/api/experiments/:code/containerSupportCode/:newSupportCode		controllers.experiments.api.ExperimentsOld.updateContainerSupportCode(code:java.lang.String,newSupportCode:java.lang.String)
#PUT		/api/experiments/:code/state									controllers.experiments.api.ExperimentsOld.updateStateCode(code:java.lang.String)
#PUT		/api/experiments/:code/containers								controllers.experiments.api.ExperimentsOld.updateContainers(code:java.lang.String)
#POST	/api/experiments												controllers.experiments.api.ExperimentsOld.save()

GET		/api/experiment-categories										controllers.experiments.api.ExperimentCategories.list()
GET		/api/experiment-types											controllers.experiments.api.ExperimentTypes.list()
GET		/api/experiment-types/:code										controllers.experiments.api.ExperimentTypes.get(code:java.lang.String)
GET		/api/experiment-types/:code/default-first						controllers.experiments.api.ExperimentTypes.getDefaultFirstExperiments(code:java.lang.String)
GET		/api/experiment-type-nodes										controllers.experiments.api.ExperimentTypeNodes.list()
GET		/api/experiment-type-nodes/:code								controllers.experiments.api.ExperimentTypeNodes.get(code:java.lang.String)

#contents 
#TODO must be remove
GET		/api/contents													controllers.containers.api.Contents.list()


#protocols api
GET		/api/protocols													controllers.protocols.api.Protocols.list()


GET		/api/printing/tags												@controllers.printing.api.Tags.list()
