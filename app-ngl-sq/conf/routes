# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.main.tpl.Main.index()

#containers tpl
GET 	/containers/:homecode/home				controllers.containers.tpl.Containers.home(homecode:java.lang.String)
GET		/tpl/containers/search					controllers.containers.tpl.Containers.search()
GET		/tpl/containers/js-routes				controllers.containers.tpl.Containers.javascriptRoutes()

#containers api
GET		/api/containers							controllers.containers.api.Containers.list()

#processes tpl
GET 	/processes/:homecode/home							controllers.processes.tpl.Processes.home(homecode:java.lang.String)
GET		/tpl/processes/search/:processTypeCode				controllers.processes.tpl.Processes.search(processTypeCode:java.lang.String)
GET		/tpl/processes/searchContainers						controllers.processes.tpl.Processes.searchContainers()
GET		/tpl/processes/newProcesses/:processTypeCode		controllers.processes.tpl.Processes.newProcesses(processTypeCode:java.lang.String)
GET		/tpl/processes/js-routes							controllers.processes.tpl.Processes.javascriptRoutes()

#processes api
POST	/api/processus							controllers.processes.api.Processes.save()
GET		/api/processus							controllers.processes.api.Processes.list()

#experiments tpl
GET 	/experiments/:homecode/home								controllers.experiments.tpl.Experiments.home(homecode:java.lang.String)
GET		/tpl/experiments/searchContainers						controllers.experiments.tpl.Experiments.searchContainers()
GET		/tpl/experiments/newExperiments/:experimentTypeCode		controllers.experiments.tpl.Experiments.newExperiments(experimentTypeCode:java.lang.String)
GET		/tpl/experiments/js-routes								controllers.experiments.tpl.Experiments.javascriptRoutes()
GET		/tpl/experiments/editExperiment/:experimentTypeCode		controllers.experiments.tpl.Experiments.editExperiment(experimentTypeCode:java.lang.String)
GET		/tpl/experiments/getEditExperimentColumns				controllers.experiments.tpl.Experiments.getEditExperimentColumns()

#experiments api
POST	/api/experiments/create											controllers.experiments.api.Experiments.create()
POST	/api/experiments/:code/experiment-information					controllers.experiments.api.Experiments.updateExperimentInformations(code:java.lang.String)
POST	/api/experiments/:code/experiment-properties					controllers.experiments.api.Experiments.updateExperimentProperties(code:java.lang.String)
POST	/api/experiments/:code/instrument-information					controllers.experiments.api.Experiments.updateInstrumentInformations(code:java.lang.String)
POST	/api/experiments/:code/instrument-properties					controllers.experiments.api.Experiments.updateInstrumentProperties(code:java.lang.String)
POST	/api/experiments/:code/comment									controllers.experiments.api.Experiments.updateComments(code:java.lang.String)
POST	/api/experiments/:code/generate-output							controllers.experiments.api.Experiments.generateOutput(code:java.lang.String)
POST	/api/experiments/:code/stateCode								controllers.experiments.api.Experiments.updateStateCode(code:java.lang.String)
POST	/api/experiments/:code/containers								controllers.experiments.api.Experiments.updateContainers(code:java.lang.String)
POST	/api/experiments/:experimentTypeCode							controllers.experiments.api.Experiments.save(experimentTypeCode:java.lang.String)

GET		/api/experiment/instrument-properties/:instrumentUsedTypeCode		controllers.experiments.api.Experiments.getInstrumentProperties(instrumentUsedTypeCode:java.lang.String)

#api combobox
GET		/api/lists/projects										controllers.lists.api.Lists.projects()
GET		/api/lists/samples										controllers.lists.api.Lists.samples(projectCode:java.lang.String)
GET		/api/lists/processTypes									controllers.lists.api.Lists.processTypes()
GET		/api/lists/experimenttypes								controllers.lists.api.Lists.experimentTypes()
GET		/api/lists/experimenttypesbycategory/:categoryCode					controllers.lists.api.Lists.experimentTypesByCategory(categoryCode:java.lang.String)
GET		/api/lists/containers/states							controllers.lists.api.Lists.containerStates()
GET		/api/lists/containers/categorycodes						controllers.lists.api.Lists.containerCategoryCodes()
GET		/api/lists/instrument-used-type/:experimentTypeCode  	controllers.lists.api.Lists.instrumentUsedTypes(experimentTypeCode:java.lang.String)
GET		/api/lists/instruments/:instrumentUsedTypeCode  		controllers.lists.api.Lists.instruments(instrumentUsedTypeCode:java.lang.String)
GET		/api/lists/protocols/:experimentTypeCode  				controllers.lists.api.Lists.protocols(experimentTypeCode:java.lang.String)
GET		/api/lists/resolutions  								controllers.lists.api.Lists.resolutions()
GET		/api/lists/experimentcategories  						controllers.lists.api.Lists.experimentCategories()


# load data
GET	   	   /loaddata/:homecode/home				controllers.dataload.SampleLoad.home(homecode:java.lang.String)
POST   	   /loaddata							controllers.dataload.SampleLoad.uploadDataFromCSVFile()
POST	   /createtemplate						controllers.dataload.SampleLoad.createTemplateFile()


GET	   /logout								controllers.administration.authentication.User.logOut()

# Home page


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
GET     /messages.js                controllers.main.tpl.Main.jsMessages()