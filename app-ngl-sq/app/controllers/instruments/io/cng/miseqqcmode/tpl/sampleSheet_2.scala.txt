@(experiment: models.laboratory.experiment.instance.Experiment, containers: List[models.laboratory.container.instance.Container])

@import controllers.instruments.io.utils._;
@import java.text.SimpleDateFormat
@import java.util.Locale
@***
02/06/2016 GenomeFolder en un seul mot; Assay->TruSeq HT; Chemistry->Amplicon
           Supression Project Name
29/08/2016 declaration de variables avec le mot cle 'var' et toutes sur une seule ligne 
           JIRA NGL-1046 mettre dans Sample_ID la meme chose que dans Sample_Name + tri sur c.code           
***@
@import java.lang.String; var supplier="";var index_1="";var index_2="";var genomefolder="";

[Header]\u000D\u000A
IEMFileVersion,4\u000D\u000A
Investigator Name,\u000D\u000A
Experiment Name,@experiment.code\u000D\u000A
Date,@(new SimpleDateFormat("dd/MM/yyyy").format(experiment.traceInformation.creationDate))\u000D\u000A
Workflow,LibraryQC\u000D\u000A
Application,Library QC\u000D\u000A
Assay,TruSeq HT\u000D\u000A
Description,\u000D\u000A
Chemistry,Amplicon\u000D\u000A
[Reads]\u000D\u000A
@experiment.instrumentProperties.get("nbCyclesRead1").value\u000D\u000A
@experiment.instrumentProperties.get("nbCyclesRead2").value\u000D\u000A
[Settings]\u000D\u000A
FlagPCRDuplicates,1\u000D\u000A
ReverseComplement,0\u000D\u000A
Adapter,AGATCGGAAGAGCACACGTCTGAACTCCAGTCA\u000D\u000A
AdapterRead2,AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT\u000D\u000A
[Data]\u000D\u000A

@*** TESTS de tri....
     @for(c <- containers.sortWith(_.support.column+_.support.line<_.support.column+_.support.line)){ --> missing parameter type for expanded function...
***@

Sample_ID,Sample_Name,Sample_Plate,Sample_Well,I7_Index_ID,index,I5_Index_ID,index2,GenomeFolder,Sample_Project,Description\u000D\u000A
@for(c <- containers.sortWith((a,b) => a.support.column+a.support.line<b.support.column+b.support.line)){  
	@for(co <- c.contents){
		@** OLD
		@(c.support.line)_@(co.sampleCode)_@(OutputHelper.getContentProperty(co,"libProcessTypeCode"))_@(OutputHelper.getContentProperty(co,"tag")),@(c.code),,,@OutputHelper.getSupplierName(OutputHelper.getIndex("index-illumina-sequencing",OutputHelper.getContentProperty(co,"tag")),"illumina"),@OutputHelper.getSequence(OutputHelper.getIndex("index-illumina-sequencing",OutputHelper.getContentProperty(co,"tag"))).split("-")(0),,@OutputHelper.getSequence(OutputHelper.getIndex("index-illumina-sequencing",OutputHelper.getContentProperty(co,"tag"))).split("-")(1),@experiment.instrumentProperties.get("genomeFolder").value,,@(OutputHelper.getContentProperty(co,"tag"))_@(co.percentage)\u000D\u000A
		**@
		@{supplier=OutputHelper.getSupplierName(OutputHelper.getIndex("index-illumina-sequencing",OutputHelper.getContentProperty(co,"tag")),"illumina")}
		@{index_1=OutputHelper.getSequence(OutputHelper.getIndex("index-illumina-sequencing",OutputHelper.getContentProperty(co,"tag"))).split("-")(0)}
		@{index_2=OutputHelper.getSequence(OutputHelper.getIndex("index-illumina-sequencing",OutputHelper.getContentProperty(co,"tag"))).split("-")(1)}
		
		@(c.code),@(c.code),,,@(supplier),@(index_1),,@(index_2),@experiment.instrumentProperties.get("genomeFolder").value,,@(OutputHelper.getContentProperty(co,"tag"))_@(co.percentage)\u000D\u000A
	}
} 

